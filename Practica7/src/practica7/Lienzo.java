/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package practica7;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RectangularShape;
import java.util.ArrayList;

/**
 *
 * @author Ã“scar
 */
public class Lienzo extends javax.swing.JPanel {
   
    final static int PUNTO=0;
    final static int LINEA=1;
    final static int RECTANGULO=2;
    final static int ELIPSE=3;
    final static int NUEVO=4;
    //Variables privadas
    private Color color;
    private int forma;
    private Point2D pIni, pFin;
    private Stroke stroke;
    private Shape s;
    private ArrayList<Shape> vShape;
    boolean relleno;
    
    
    /**
     * Creates new form NewJPanel
     */
    public Lienzo() {
        initComponents();
        stroke = new BasicStroke(10.0f);
        vShape = new ArrayList();
        color = new Color(0,0,0);
    }
    
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setPaint(color);
        g2d.setStroke(stroke);
        for (Shape s : vShape) {
            if (relleno) {
                g2d.fill(s);
            }
            g2d.draw(s);
        }
    }
    
    private Shape createShape(Point2D p1, Point2D p2){
        if(p1==null || (p2==null && forma!= PUNTO)) return null;
        
        switch(forma){
            case PUNTO:
                return s=new Line2D.Double(p1,p1);
            case LINEA:
                return s=new Line2D.Double(p1,p2);
            case RECTANGULO:
                s = new Rectangle2D.Double();
                ((RectangularShape)s).setFrameFromDiagonal(p1,p2);
                return s;
            case ELIPSE:
                s = new Ellipse2D.Double();
                ((RectangularShape)s).setFrameFromDiagonal(p1,p2);
            default:
                return s=null;
        }
    }

    private void updateShape(Point2D p1, Point2D p2){
        if (s instanceof Line2D){
            ((Line2D)s).setLine(p1,p2);
        }else if (s instanceof RectangularShape){
            ((RectangularShape)s).setFrameFromDiagonal(p1, p2);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        pIni = evt.getPoint();
        this.repaint();
    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        pIni = evt.getPoint();
        vShape.add(createShape(evt.getPoint(), evt.getPoint()));
        this.repaint();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        updateShape(pIni, evt.getPoint());
        this.repaint();
    }//GEN-LAST:event_formMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        updateShape(pIni, evt.getPoint());
        this.repaint();
    }//GEN-LAST:event_formMouseDragged

    public void setColor(Color color){
        this.color = color;
    }
        
     public Color getColor(){
        return color;
    }
     
    public int getForma() {
        return forma;
    }

    public void setForma(int forma) {
        this.forma = forma;
    }


    public Point2D getpIni() {
        return pIni;
    }

    public void setpIni(Point pIni) {
        this.pIni = pIni;
    }

    public Point2D getpFin() {
        return pFin;
    }

    public void setpFin(Point pFin) {
        this.pFin = pFin;
    }

    public boolean isRelleno() {
        return relleno;
    }
    
    public void setRelleno(boolean relleno) {
        this.relleno = relleno;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
