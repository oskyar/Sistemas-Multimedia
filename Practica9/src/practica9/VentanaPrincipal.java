/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica9;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.RescaleOp;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;

/**
 *
 * @author Óscar
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    //Guardo la última ventana interna creada
    private VentanaInterna vi;
    private int numVentanas;
    private Shape s;
    

    public VentanaPrincipal() {
        initComponents();
        numVentanas = 0;
        vi = new VentanaInterna();
        escritorio.add(vi);
        vi.setVisible(true);
        vi.setTitle("Lienzo " + ++numVentanas);
        botonLapiz.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        BotonesMenu = new javax.swing.ButtonGroup();
        GrupoColores = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        BotonesFiguras = new javax.swing.JToolBar();
        botonLapiz = new javax.swing.JToggleButton();
        botonLinea = new javax.swing.JToggleButton();
        botonRectangulo = new javax.swing.JToggleButton();
        botonOvalo = new javax.swing.JToggleButton();
        cuerpo = new javax.swing.JPanel();
        escritorio = new javax.swing.JDesktopPane();
        pie = new javax.swing.JPanel();
        panelAtributos = new javax.swing.JPanel();
        contenedorColores = new javax.swing.JPanel();
        panelColores = new javax.swing.JPanel();
        botonColorRojo = new javax.swing.JButton();
        botonColorNegro = new javax.swing.JButton();
        botonColorAzul = new javax.swing.JButton();
        botonColorBlanco = new javax.swing.JButton();
        botonColorVerde = new javax.swing.JButton();
        botonColorAmarillo = new javax.swing.JButton();
        contenedorGrosor = new javax.swing.JPanel();
        panelGrosor = new javax.swing.JPanel();
        grosor = new javax.swing.JSpinner();
        contenedorEditarRelleno = new javax.swing.JPanel();
        panelRelleno = new javax.swing.JPanel();
        checkboxRelleno = new javax.swing.JCheckBox();
        checkboxEditar = new javax.swing.JCheckBox();
        contenedorBrillo = new javax.swing.JPanel();
        panelBrillo = new javax.swing.JPanel();
        sliderBrillo = new javax.swing.JSlider();
        contenedorEfecto = new javax.swing.JPanel();
        panelEfecto = new javax.swing.JPanel();
        listaEfectos = new javax.swing.JComboBox();
        panelLabelFigura = new javax.swing.JPanel();
        labelFigura = new javax.swing.JLabel();
        menu = new javax.swing.JMenuBar();
        archivo = new javax.swing.JMenu();
        nuevo = new javax.swing.JMenuItem();
        abrir = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        edicion = new javax.swing.JMenu();
        verBarraEstado = new javax.swing.JCheckBoxMenuItem();
        imagen = new javax.swing.JMenu();
        menuRescaleOp = new javax.swing.JMenuItem();
        menuConvolveOp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        BotonesFiguras.setRollover(true);

        BotonesMenu.add(botonLapiz);
        botonLapiz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Lapiz.gif"))); // NOI18N
        botonLapiz.setFocusable(false);
        botonLapiz.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonLapiz.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonLapiz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonLapizMouseClicked(evt);
            }
        });
        BotonesFiguras.add(botonLapiz);

        BotonesMenu.add(botonLinea);
        botonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Linea.gif"))); // NOI18N
        botonLinea.setFocusable(false);
        botonLinea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonLinea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonLinea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonLineaMouseClicked(evt);
            }
        });
        BotonesFiguras.add(botonLinea);

        BotonesMenu.add(botonRectangulo);
        botonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Rectangulo.gif"))); // NOI18N
        botonRectangulo.setFocusable(false);
        botonRectangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonRectangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonRectangulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonRectanguloMouseClicked(evt);
            }
        });
        BotonesFiguras.add(botonRectangulo);

        BotonesMenu.add(botonOvalo);
        botonOvalo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Ovalo.gif"))); // NOI18N
        botonOvalo.setFocusable(false);
        botonOvalo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonOvalo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonOvalo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonOvaloMouseClicked(evt);
            }
        });
        BotonesFiguras.add(botonOvalo);

        jPanel2.add(BotonesFiguras);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        cuerpo.setPreferredSize(new java.awt.Dimension(772, 400));
        cuerpo.setLayout(new java.awt.BorderLayout());
        cuerpo.add(escritorio, java.awt.BorderLayout.CENTER);

        getContentPane().add(cuerpo, java.awt.BorderLayout.CENTER);

        pie.setLayout(new java.awt.BorderLayout());

        panelAtributos.setPreferredSize(new java.awt.Dimension(831, 100));
        panelAtributos.setLayout(new javax.swing.BoxLayout(panelAtributos, javax.swing.BoxLayout.LINE_AXIS));

        contenedorColores.setMaximumSize(new java.awt.Dimension(125, 90));
        contenedorColores.setMinimumSize(new java.awt.Dimension(125, 90));
        contenedorColores.setPreferredSize(new java.awt.Dimension(125, 90));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0);
        flowLayout1.setAlignOnBaseline(true);
        contenedorColores.setLayout(flowLayout1);

        panelColores.setBorder(javax.swing.BorderFactory.createTitledBorder("Color"));
        panelColores.setMaximumSize(new java.awt.Dimension(89, 90));
        panelColores.setMinimumSize(new java.awt.Dimension(89, 90));
        panelColores.setPreferredSize(new java.awt.Dimension(125, 90));
        panelColores.setLayout(new java.awt.GridBagLayout());

        botonColorRojo.setBackground(new java.awt.Color(255, 0, 0));
        botonColorRojo.setBorder(null);
        GrupoColores.add(botonColorRojo);
        botonColorRojo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonColorRojo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        botonColorRojo.setMaximumSize(new java.awt.Dimension(15, 15));
        botonColorRojo.setMinimumSize(new java.awt.Dimension(15, 15));
        botonColorRojo.setPreferredSize(new java.awt.Dimension(15, 15));
        botonColorRojo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonColorRojoMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        panelColores.add(botonColorRojo, gridBagConstraints);

        botonColorNegro.setBackground(new java.awt.Color(0, 0, 0));
        botonColorNegro.setBorder(null);
        GrupoColores.add(botonColorNegro);
        botonColorNegro.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonColorNegro.setMaximumSize(new java.awt.Dimension(15, 15));
        botonColorNegro.setMinimumSize(new java.awt.Dimension(15, 15));
        botonColorNegro.setPreferredSize(new java.awt.Dimension(15, 15));
        botonColorNegro.setSelected(true);
        botonColorNegro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonColorNegroMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        panelColores.add(botonColorNegro, gridBagConstraints);

        botonColorAzul.setBackground(new java.awt.Color(0, 0, 255));
        botonColorAzul.setBorder(null);
        GrupoColores.add(botonColorAzul);
        botonColorAzul.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonColorAzul.setMaximumSize(new java.awt.Dimension(15, 15));
        botonColorAzul.setMinimumSize(new java.awt.Dimension(15, 15));
        botonColorAzul.setPreferredSize(new java.awt.Dimension(15, 15));
        botonColorAzul.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonColorAzulMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 15);
        panelColores.add(botonColorAzul, gridBagConstraints);

        botonColorBlanco.setBackground(new java.awt.Color(255, 255, 255));
        botonColorBlanco.setBorder(null);
        GrupoColores.add(botonColorBlanco);
        botonColorBlanco.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonColorBlanco.setMaximumSize(new java.awt.Dimension(15, 15));
        botonColorBlanco.setMinimumSize(new java.awt.Dimension(15, 15));
        botonColorBlanco.setPreferredSize(new java.awt.Dimension(15, 15));
        botonColorBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonColorBlancoMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 15, 0);
        panelColores.add(botonColorBlanco, gridBagConstraints);

        botonColorVerde.setBackground(new java.awt.Color(0, 255, 0));
        botonColorVerde.setBorder(null);
        GrupoColores.add(botonColorVerde);
        botonColorVerde.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonColorVerde.setMaximumSize(new java.awt.Dimension(15, 15));
        botonColorVerde.setMinimumSize(new java.awt.Dimension(15, 15));
        botonColorVerde.setPreferredSize(new java.awt.Dimension(15, 15));
        botonColorVerde.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonColorVerdeMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 15, 15);
        panelColores.add(botonColorVerde, gridBagConstraints);

        botonColorAmarillo.setBackground(new java.awt.Color(255, 255, 0));
        botonColorAmarillo.setBorder(null);
        GrupoColores.add(botonColorAmarillo);
        botonColorAmarillo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonColorAmarillo.setMaximumSize(new java.awt.Dimension(15, 15));
        botonColorAmarillo.setMinimumSize(new java.awt.Dimension(15, 15));
        botonColorAmarillo.setPreferredSize(new java.awt.Dimension(15, 15));
        botonColorAmarillo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonColorAmarilloMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 15, 0);
        panelColores.add(botonColorAmarillo, gridBagConstraints);

        contenedorColores.add(panelColores);

        panelAtributos.add(contenedorColores);

        contenedorGrosor.setBorder(javax.swing.BorderFactory.createTitledBorder("Grosor"));
        contenedorGrosor.setMaximumSize(new java.awt.Dimension(90, 90));
        contenedorGrosor.setMinimumSize(new java.awt.Dimension(90, 90));
        contenedorGrosor.setPreferredSize(new java.awt.Dimension(90, 90));
        contenedorGrosor.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        panelGrosor.setMaximumSize(new java.awt.Dimension(70, 50));
        panelGrosor.setMinimumSize(new java.awt.Dimension(60, 50));
        panelGrosor.setPreferredSize(new java.awt.Dimension(60, 50));

        grosor.setMaximumSize(new java.awt.Dimension(50, 28));
        grosor.setMinimumSize(new java.awt.Dimension(50, 28));
        grosor.setPreferredSize(new java.awt.Dimension(50, 28));
        grosor.setValue(1);
        grosor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                grosorStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelGrosorLayout = new javax.swing.GroupLayout(panelGrosor);
        panelGrosor.setLayout(panelGrosorLayout);
        panelGrosorLayout.setHorizontalGroup(
            panelGrosorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(panelGrosorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelGrosorLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(grosor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelGrosorLayout.setVerticalGroup(
            panelGrosorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(panelGrosorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelGrosorLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(grosor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        contenedorGrosor.add(panelGrosor);

        panelAtributos.add(contenedorGrosor);

        contenedorEditarRelleno.setBorder(javax.swing.BorderFactory.createTitledBorder(" "));
        contenedorEditarRelleno.setMaximumSize(new java.awt.Dimension(100, 90));
        contenedorEditarRelleno.setMinimumSize(new java.awt.Dimension(95, 90));
        contenedorEditarRelleno.setPreferredSize(new java.awt.Dimension(95, 90));
        contenedorEditarRelleno.setLayout(new java.awt.GridLayout(0, 1));

        panelRelleno.setBorder(null);
        panelRelleno.setToolTipText("");
        panelRelleno.setMaximumSize(new java.awt.Dimension(90, 80));
        panelRelleno.setMinimumSize(new java.awt.Dimension(90, 80));
        panelRelleno.setPreferredSize(new java.awt.Dimension(90, 80));
        panelRelleno.setLayout(new java.awt.GridLayout(2, 1));

        checkboxRelleno.setText("Relleno");
        checkboxRelleno.setActionCommand("");
        checkboxRelleno.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        checkboxRelleno.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkboxRellenoStateChanged(evt);
            }
        });
        checkboxRelleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxRellenoActionPerformed(evt);
            }
        });
        panelRelleno.add(checkboxRelleno);

        checkboxEditar.setText("Editar");
        checkboxEditar.setActionCommand("");
        checkboxEditar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        checkboxEditar.setMaximumSize(new java.awt.Dimension(69, 10));
        checkboxEditar.setMinimumSize(new java.awt.Dimension(69, 10));
        checkboxEditar.setPreferredSize(new java.awt.Dimension(69, 10));
        checkboxEditar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkboxEditarStateChanged(evt);
            }
        });
        panelRelleno.add(checkboxEditar);

        contenedorEditarRelleno.add(panelRelleno);

        panelAtributos.add(contenedorEditarRelleno);

        contenedorBrillo.setBorder(javax.swing.BorderFactory.createTitledBorder("Brillo"));
        contenedorBrillo.setMaximumSize(new java.awt.Dimension(200, 90));
        contenedorBrillo.setMinimumSize(new java.awt.Dimension(95, 90));
        contenedorBrillo.setPreferredSize(new java.awt.Dimension(95, 90));
        contenedorBrillo.setLayout(new java.awt.GridLayout(0, 1));

        panelBrillo.setBorder(null);
        panelBrillo.setToolTipText("");
        panelBrillo.setMaximumSize(new java.awt.Dimension(90, 80));
        panelBrillo.setMinimumSize(new java.awt.Dimension(90, 80));
        panelBrillo.setPreferredSize(new java.awt.Dimension(90, 80));
        panelBrillo.setLayout(new java.awt.BorderLayout());

        sliderBrillo.setMaximum(200);
        sliderBrillo.setMinimum(-200);
        sliderBrillo.setPaintLabels(true);
        sliderBrillo.setValue(0);
        sliderBrillo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderBrilloStateChanged(evt);
            }
        });
        sliderBrillo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sliderBrilloFocusLost(evt);
            }
        });
        panelBrillo.add(sliderBrillo, java.awt.BorderLayout.CENTER);

        contenedorBrillo.add(panelBrillo);

        panelAtributos.add(contenedorBrillo);

        contenedorEfecto.setBorder(javax.swing.BorderFactory.createTitledBorder("Efecto"));
        contenedorEfecto.setToolTipText("");
        contenedorEfecto.setMaximumSize(new java.awt.Dimension(200, 90));
        contenedorEfecto.setMinimumSize(new java.awt.Dimension(95, 90));
        contenedorEfecto.setPreferredSize(new java.awt.Dimension(150, 90));
        contenedorEfecto.setLayout(new java.awt.GridLayout(0, 1));

        panelEfecto.setBorder(null);
        panelEfecto.setToolTipText("");
        panelEfecto.setMaximumSize(new java.awt.Dimension(200, 200));
        panelEfecto.setMinimumSize(new java.awt.Dimension(90, 80));
        panelEfecto.setPreferredSize(new java.awt.Dimension(150, 80));
        panelEfecto.setLayout(new java.awt.BorderLayout());

        listaEfectos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Emborronamiento media", "Emborronamiento binomial", "Enfoque", "Relieve", "Dectector de fronteras laplaciano" }));
        listaEfectos.setMaximumSize(new java.awt.Dimension(200, 50));
        listaEfectos.setMinimumSize(new java.awt.Dimension(150, 40));
        listaEfectos.setPreferredSize(new java.awt.Dimension(150, 40));
        listaEfectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaEfectosActionPerformed(evt);
            }
        });
        panelEfecto.add(listaEfectos, java.awt.BorderLayout.CENTER);

        contenedorEfecto.add(panelEfecto);

        panelAtributos.add(contenedorEfecto);

        pie.add(panelAtributos, java.awt.BorderLayout.CENTER);

        panelLabelFigura.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        panelLabelFigura.setLayout(new javax.swing.BoxLayout(panelLabelFigura, javax.swing.BoxLayout.LINE_AXIS));

        labelFigura.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelFigura.setText("labelFigura");
        panelLabelFigura.add(labelFigura);

        pie.add(panelLabelFigura, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(pie, java.awt.BorderLayout.PAGE_END);

        archivo.setText("Archivo");

        nuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/NuevoBoceto.GIF"))); // NOI18N
        nuevo.setText("Nuevo");
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        archivo.add(nuevo);

        abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        archivo.add(abrir);

        guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Guardar.gif"))); // NOI18N
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        archivo.add(guardar);

        menu.add(archivo);

        edicion.setText("Edición");

        verBarraEstado.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        verBarraEstado.setSelected(true);
        verBarraEstado.setText("Ver barra estado");
        verBarraEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verBarraEstadoActionPerformed(evt);
            }
        });
        edicion.add(verBarraEstado);

        menu.add(edicion);

        imagen.setText("Imagen");

        menuRescaleOp.setText("RescaleOp");
        menuRescaleOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRescaleOpActionPerformed(evt);
            }
        });
        imagen.add(menuRescaleOp);

        menuConvolveOp.setText("ConvolveOp");
        menuConvolveOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConvolveOpActionPerformed(evt);
            }
        });
        imagen.add(menuConvolveOp);

        menu.add(imagen);

        setJMenuBar(menu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonLineaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLineaMouseClicked
        labelFigura.setText("Línea");
        botonLinea.setSelected(true);
        Lienzo.setForma(Lienzo.LINEA);
    }//GEN-LAST:event_botonLineaMouseClicked

    private void botonRectanguloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRectanguloMouseClicked
        labelFigura.setText("Rectángulo");
        botonRectangulo.setSelected(true);
        Lienzo.setForma(Lienzo.RECTANGULO);
    }//GEN-LAST:event_botonRectanguloMouseClicked

    private void botonOvaloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonOvaloMouseClicked
        labelFigura.setText("Ovalo");
        botonOvalo.setSelected(true);
        Lienzo.setForma(Lienzo.ELIPSE);
    }//GEN-LAST:event_botonOvaloMouseClicked

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed

        VentanaInterna vi = new VentanaInterna();
        escritorio.add(vi);
        vi.getLienzo().setColor(getVentanaInterna().getLienzo().getColor());
        vi.getLienzo().setStroke(getVentanaInterna().getLienzo().getStroke());
        vi.getLienzo().setEditar(getVentanaInterna().getLienzo().isEditar());
        vi.getLienzo().setRelleno(getVentanaInterna().getLienzo().isRelleno());
        vi.setTitle("Lienzo " + ++numVentanas);
        vi.setVisible(true);
        setVentanaInterna(vi);

    }//GEN-LAST:event_nuevoActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showSaveDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = dlg.getSelectedFile();
                VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
                BufferedImage img = vi.getLienzo().getImageOriginal();
                img = vi.getLienzo().volcado(img);

                ImageIO.write(img, "jpg", f);
                //Código 
            } catch (IOException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void botonColorNegroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonColorNegroMouseClicked
        VentanaInterna vInt = (VentanaInterna) escritorio.getSelectedFrame();
        if (vInt != null) {
            vInt.getLienzo().setColor(Color.black);
        }
    }//GEN-LAST:event_botonColorNegroMouseClicked

    private void botonColorRojoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonColorRojoMouseClicked
        VentanaInterna vInt = (VentanaInterna) escritorio.getSelectedFrame();
        if (vInt != null) {
            vInt.getLienzo().setColor(Color.red);
        }
    }//GEN-LAST:event_botonColorRojoMouseClicked

    private void botonColorAzulMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonColorAzulMouseClicked
        VentanaInterna vInt = (VentanaInterna) escritorio.getSelectedFrame();
        if (vInt != null) {
            vInt.getLienzo().setColor(Color.blue);
        }
    }//GEN-LAST:event_botonColorAzulMouseClicked

    private void botonColorBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonColorBlancoMouseClicked
        VentanaInterna vInt = (VentanaInterna) escritorio.getSelectedFrame();
        if (vInt != null) {
            vInt.getLienzo().setColor(Color.white);
        }
    }//GEN-LAST:event_botonColorBlancoMouseClicked

    private void botonColorAmarilloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonColorAmarilloMouseClicked
        VentanaInterna vInt = (VentanaInterna) escritorio.getSelectedFrame();
        if (vInt != null) {
            vInt.getLienzo().setColor(Color.yellow);
        }
    }//GEN-LAST:event_botonColorAmarilloMouseClicked

    private void botonColorVerdeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonColorVerdeMouseClicked
        VentanaInterna vInt = (VentanaInterna) escritorio.getSelectedFrame();
        if (vInt != null) {
            vInt.getLienzo().setColor(Color.green);
        }
    }//GEN-LAST:event_botonColorVerdeMouseClicked

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna();
                vi.getLienzo().setImageOriginal(img);
                //vi.getLienzo().setImageActual(img);
                this.escritorio.add(vi);
                vi.setVisible(true);
            } catch (Exception ex) {
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_abrirActionPerformed

    private void verBarraEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verBarraEstadoActionPerformed
        if (!verBarraEstado.isSelected()) {
            panelLabelFigura.setVisible(false);
        } else {
            panelLabelFigura.setVisible(true);
        }
    }//GEN-LAST:event_verBarraEstadoActionPerformed

    private void botonLapizMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLapizMouseClicked
        labelFigura.setText("Lápiz");
        botonLapiz.setSelected(true);
        Lienzo.setForma(Lienzo.PUNTO);
    }//GEN-LAST:event_botonLapizMouseClicked

    private void checkboxRellenoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkboxRellenoStateChanged
        VentanaInterna vInt = (VentanaInterna) escritorio.getSelectedFrame();
        if (vInt != null) {
            vInt.getLienzo().setRelleno(checkboxRelleno.isSelected());
        }
    }//GEN-LAST:event_checkboxRellenoStateChanged

    private void checkboxEditarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkboxEditarStateChanged
        VentanaInterna vInt = (VentanaInterna) escritorio.getSelectedFrame();
        if (vInt != null) {
            vInt.getLienzo().setEditar(checkboxEditar.isSelected());
        }
    }//GEN-LAST:event_checkboxEditarStateChanged

    private void grosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_grosorStateChanged
        VentanaInterna vInt = (VentanaInterna) escritorio.getSelectedFrame();
        if (vInt != null) {
            vInt.getLienzo().setStroke(new BasicStroke(((Integer) grosor.getValue()).floatValue()));
        }
    }//GEN-LAST:event_grosorStateChanged

    private void checkboxRellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxRellenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxRellenoActionPerformed

    private void menuRescaleOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRescaleOpActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImageOriginal();
            if (imgSource != null) {
                try {
                    RescaleOp rop = new RescaleOp(1.0F, 100.0F, null);
                    BufferedImage imgdest = rop.filter(imgSource, null);
                    vi.getLienzo().setImageOriginal(imgdest);
                    vi.getLienzo().repaint();
                } catch (IllegalArgumentException e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_menuRescaleOpActionPerformed

    BufferedImage convertImageType(BufferedImage img, int type) {
        if (img == null) {
            return null;
        }
        BufferedImage imgOut = new BufferedImage(img.getWidth(),
                img.getHeight(), type);
        Graphics2D g2d = imgOut.createGraphics();
        g2d.drawImage(img, 0, 0, null);
        return imgOut;
    }


    private void menuConvolveOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConvolveOpActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            BufferedImage imgSource = vi.getLienzo().getImageOriginal();
            if (imgSource != null) {
                try {
                    ConvolveOp cop = new ConvolveOp(KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3));
                    BufferedImage imgdest = cop.filter(imgSource, null);
                    vi.getLienzo().setImageOriginal(imgdest);
                    vi.getLienzo().repaint();
                } catch (IllegalArgumentException e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_menuConvolveOpActionPerformed

    private void sliderBrilloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderBrilloStateChanged
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if (vi != null) {
            if (vi.getLienzo().getImageOriginal() != null) {
                try {
                    RescaleOp rop = new RescaleOp(1.0F, (float) sliderBrillo.getValue(), null);
                    BufferedImage imgdest = rop.filter(vi.getLienzo().getImageOriginal(), null);
                    vi.getLienzo().setImageActual(imgdest);
                    vi.getLienzo().repaint();
                } catch (IllegalArgumentException e) {
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_sliderBrilloStateChanged

    private void listaEfectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaEfectosActionPerformed
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());

        switch (listaEfectos.getSelectedIndex()) {

            case KernelProducer.TYPE_MEDIA_3x3:
                if (vi != null) {
                    BufferedImage imgSource = vi.getLienzo().getImageOriginal();
                    if (imgSource != null) {
                        try {
                            ConvolveOp cop = new ConvolveOp(KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3));
                            BufferedImage imgdest = cop.filter(imgSource, null);
                            vi.getLienzo().setImageActual(imgdest);
                            vi.getLienzo().repaint();
                        } catch (IllegalArgumentException e) {
                            System.err.println(e.getLocalizedMessage());
                        }
                    }
                }
                break;

            case KernelProducer.TYPE_BINOMIAL_3x3:
                if (vi != null) {
                    BufferedImage imgSource = vi.getLienzo().getImageOriginal();
                    if (imgSource != null) {
                        try {
                            ConvolveOp cop = new ConvolveOp(KernelProducer.createKernel(KernelProducer.TYPE_BINOMIAL_3x3));
                            BufferedImage imgdest = cop.filter(imgSource, null);
                            vi.getLienzo().setImageActual(imgdest);
                            vi.getLienzo().repaint();
                        } catch (IllegalArgumentException e) {
                            System.err.println(e.getLocalizedMessage());
                        }
                    }
                }
                break;

            case KernelProducer.TYPE_ENFOQUE_3x3:
                if (vi != null) {
                    BufferedImage imgSource = vi.getLienzo().getImageOriginal();
                    if (imgSource != null) {
                        try {
                            ConvolveOp cop = new ConvolveOp(KernelProducer.createKernel(KernelProducer.TYPE_ENFOQUE_3x3));
                            BufferedImage imgdest = cop.filter(imgSource, null);
                            vi.getLienzo().setImageActual(imgdest);
                            vi.getLienzo().repaint();
                        } catch (IllegalArgumentException e) {
                            System.err.println(e.getLocalizedMessage());
                        }
                    }
                }

                break;

            case KernelProducer.TYPE_RELIEVE_3x3:
                if (vi != null) {
                    BufferedImage imgSource = vi.getLienzo().getImageOriginal();
                    if (imgSource != null) {
                        try {
                            ConvolveOp cop = new ConvolveOp(KernelProducer.createKernel(KernelProducer.TYPE_RELIEVE_3x3));
                            BufferedImage imgdest = cop.filter(imgSource, null);
                            vi.getLienzo().setImageActual(imgdest);
                            vi.getLienzo().repaint();
                        } catch (IllegalArgumentException e) {
                            System.err.println(e.getLocalizedMessage());
                        }
                    }
                }
                break;

            case KernelProducer.TYPE_LAPLACIANA_3x3:
                if (vi != null) {
                    BufferedImage imgSource = vi.getLienzo().getImageOriginal();
                    if (imgSource != null) {
                        try {
                            ConvolveOp cop = new ConvolveOp(KernelProducer.createKernel(KernelProducer.TYPE_LAPLACIANA_3x3));
                            BufferedImage imgdest = cop.filter(imgSource, null);
                            vi.getLienzo().setImageActual(imgdest);
                            vi.getLienzo().repaint();
                        } catch (IllegalArgumentException e) {
                            System.err.println(e.getLocalizedMessage());
                        }
                    }
                }
                break;

        }
    }//GEN-LAST:event_listaEfectosActionPerformed

    private void sliderBrilloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sliderBrilloFocusLost
        VentanaInterna vi = (VentanaInterna) (escritorio.getSelectedFrame());
        if(vi!=null)vi.getLienzo().setImageOriginal(vi.getLienzo().getImageActual());
       /* if(vi!=null)vi.getLienzo().setImageActual(null);
        */
        sliderBrillo.setValue(0);
    }//GEN-LAST:event_sliderBrilloFocusLost

    public VentanaInterna getVentanaInterna() {
        return vi;
    }

    public void setVentanaInterna(VentanaInterna vi) {
        this.vi = vi;
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar BotonesFiguras;
    private javax.swing.ButtonGroup BotonesMenu;
    private javax.swing.ButtonGroup GrupoColores;
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenu archivo;
    private javax.swing.JButton botonColorAmarillo;
    private javax.swing.JButton botonColorAzul;
    private javax.swing.JButton botonColorBlanco;
    private javax.swing.JButton botonColorNegro;
    private javax.swing.JButton botonColorRojo;
    private javax.swing.JButton botonColorVerde;
    private javax.swing.JToggleButton botonLapiz;
    private javax.swing.JToggleButton botonLinea;
    private javax.swing.JToggleButton botonOvalo;
    private javax.swing.JToggleButton botonRectangulo;
    private javax.swing.JCheckBox checkboxEditar;
    private javax.swing.JCheckBox checkboxRelleno;
    private javax.swing.JPanel contenedorBrillo;
    private javax.swing.JPanel contenedorColores;
    private javax.swing.JPanel contenedorEditarRelleno;
    private javax.swing.JPanel contenedorEfecto;
    private javax.swing.JPanel contenedorGrosor;
    private javax.swing.JPanel cuerpo;
    private javax.swing.JMenu edicion;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JSpinner grosor;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JMenu imagen;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelFigura;
    private javax.swing.JComboBox listaEfectos;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenuItem menuConvolveOp;
    private javax.swing.JMenuItem menuRescaleOp;
    private javax.swing.JMenuItem nuevo;
    private javax.swing.JPanel panelAtributos;
    private javax.swing.JPanel panelBrillo;
    private javax.swing.JPanel panelColores;
    private javax.swing.JPanel panelEfecto;
    private javax.swing.JPanel panelGrosor;
    private javax.swing.JPanel panelLabelFigura;
    private javax.swing.JPanel panelRelleno;
    private javax.swing.JPanel pie;
    private javax.swing.JSlider sliderBrillo;
    private javax.swing.JCheckBoxMenuItem verBarraEstado;
    // End of variables declaration//GEN-END:variables
}
